name: Run JPF

on:
  push:

jobs:
  run-asan:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: 4f16097d6934aeac324f524558661677bd755f5c
  
    - name: Set up JDK 17 for project
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: maven

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
          wget https://github.com/macports/macports-base/releases/download/v2.9.3/MacPorts-2.9.3.tar.gz
          tar -xvzf MacPorts-2.9.3.tar.gz
          cd MacPorts-2.9.3
          ./configure && make && sudo make install 
          cd ../ && rm -rf MacPorts-2.9.3*
          echo 'export PATH="/opt/local/bin:$PATH"' >> ~/.bash_profile
          source ~/.bash_profile
          sudo port -v selfupdate
          sudo port install protobuf-c
        
    - name: Build project with JDK 17 
      run: mvn clean install -DskipTests

    - name: Set up JDK 11 for JPF
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Adjust symbolic links to JDK 11 (macOS) 
      if: runner.os == 'macOS'
      run: | 
        sudo rm /System/Library/Frameworks/JavaVM.framework/Versions/Current
        sudo ln -s /Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home /System/Library/Frameworks/JavaVM.framework/Versions/Current
  
    - name: Clone and build jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars

    - name: Run JPF on JAR files
      run: |
        #!/bin/bash

        directory=$(pwd)
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"
        jar_files=$(find "$directory" -type f -name "*.jar")

        for jar_file in $jar_files; 
        do
            jar_dir=$(dirname "$jar_file")
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')

            if [ -z "$main_class" ]; then
                continue
            fi

            command="java -jar $runjpf_jar +classpath=$jar_file $main_class"
            $command
        done
